var TLN = { eventList: {}, update_line_numbers: function (a, b) { var c = a.value.split("\n").length - b.children.length; if (0 < c) { for (var d = document.createDocumentFragment(); 0 < c;) { var e = document.createElement("span"); e.className = "tln-line"; d.appendChild(e); c-- } b.appendChild(d) } for (; 0 > c;)b.removeChild(b.firstChild), c++ }, append_line_numbers: function (a) { var b = document.getElementById(a); if (null == b) return console.warn("[tln.js] Couldn't find textarea of id '" + a + "'"); if (-1 != b.className.indexOf("tln-active")) return console.warn("[tln.js] textarea of id '" + a + "' is already numbered"); b.classList.add("tln-active"); b.style = {}; var c = document.createElement("div"); b.parentNode.insertBefore(c, b); c.className = "tln-wrapper"; TLN.update_line_numbers(b, c); TLN.eventList[a] = []; for (var d = ["propertychange", "input", "keydown", "keyup"], e = function (b, c) { return function (a) { if (10 == +b.scrollLeft && (37 == a.keyCode || 37 == a.which || "ArrowLeft" == a.code || "ArrowLeft" == a.key) || 36 == a.keyCode || 36 == a.which || "Home" == a.code || "Home" == a.key || 13 == a.keyCode || 13 == a.which || "Enter" == a.code || "Enter" == a.key || "NumpadEnter" == a.code) b.scrollLeft = 0; TLN.update_line_numbers(b, c) } }(b, c), f = d.length - 1; 0 <= f; f--)b.addEventListener(d[f], e), TLN.eventList[a].push({ evt: d[f], hdlr: e }); d = ["change", "mousewheel", "scroll"]; c = function (a, b) { return function () { b.scrollTop = a.scrollTop } }(b, c); for (e = d.length - 1; 0 <= e; e--)b.addEventListener(d[e], c), TLN.eventList[a].push({ evt: d[e], hdlr: c }) }, remove_line_numbers: function (a) { var b = document.getElementById(a); if (null == b) return console.warn("[tln.js] Couldn't find textarea of id '" + a + "'"); if (-1 == b.className.indexOf("tln-active")) return console.warn("[tln.js] textarea of id '" + a + "' isn't numbered"); b.classList.remove("tln-active"); b.previousSibling.remove(); if (TLN.eventList[a]) { for (var c = TLN.eventList[a].length - 1; 0 <= c; c--) { var d = TLN.eventList[a][c]; b.removeEventListener(d.evt, d.hdlr) } delete TLN.eventList[a] } } };